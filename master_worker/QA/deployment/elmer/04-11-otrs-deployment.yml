apiVersion: v1
kind: ServiceAccount
metadata:
  name: otrs-qa
  namespace: mineco-qa
---
# #  INGRESS MINECO
# apiVersion: v1
# kind: Service
# metadata:
#   name: nginx-ingress-otrs
#   namespace: nginx-ingress
# spec:
#   type: LoadBalancer
#   externalIPs:
#   - 128.5.4.11
#   ports:
#     - protocol: TCP
#       port: 80
#       targetPort: 80
#       name: http
#     - protocol: TCP
#       port: 443
#       targetPort: 443
#       name: https
#   selector:
#     app: nginx-ingress


---

# # VOLUME DATA
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: otrs-deploy-qa
#   namespace: mineco-qa
#   labels:
#     name: otrs-deploy-qa
# spec:
#   storageClassName: manual
#   capacity:
#     storage: 20Gi
#   accessModes:
#     - ReadWriteOnce
#   nfs:
#     server: 128.5.8.222
#     path: "/deployment/qa/otrs"

# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: otrs-deploy-qa
#   namespace: mineco-qa
# spec:
#   storageClassName: manual
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 20Gi
#   selector:
#     matchLabels:
#       name: otrs-deploy-qa

# ---
# DEPLOYMENT APP
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otrs-qa
  namespace: mineco-qa
  labels:
    run: otrs-qa
spec:
  replicas: 1
  selector:
    matchLabels:
      run: otrs-qa
  template:
    metadata:
      labels:
        run: otrs-qa
    spec:
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - 128.5.8.26
        searches:
          - mineco-dev.svc.cluster.local
          - svc.cluster.local 
          - cluster.local
      containers:
      - name: otrs-qa
        # image: juanluisbaptiste/otrs:6.0.27
        image: appcontainers/otrs
        env:
          - name: MYSQL_DB
            value: "otrs"
          - name: MYSQL_SERVER
            value: '128.5.8.73'
          - name: MYSQL_USER
            value: 'desarrollo'
          - name: MYSQL_PASS
            value: '@desarrollo$2K20'
          - name: APP_USER
            value: 'desarrollo'
          - name: APP_PASS
            value: '@desarrollo$2K20'
          - name: MODE
            value: 'remote'
          - name: TERMTAG
            value: 'prod'

        ports:
          # - containerPort: 443
          #   protocol: TCP
          - containerPort: 80
            protocol: TCP
      #   volumeMounts:
      #       - mountPath: "/var/www/html"
      #         name: otrs-qa-vol
      # volumes:
      #   - name: otrs-qa-vol
      #     persistentVolumeClaim:
      #       claimName: otrs-deploy-qa


---
apiVersion: v1
kind: Service
metadata:
  name: otrs-qa
  namespace: mineco-qa
  labels:
    app.kubernetes.io/name: otrs-qa
    app.kubernetes.io/part-of: otrs-qa
spec:
  # type: ClusterIP
  type: LoadBalancer
  externalIPs:
  - 128.5.4.11
  ports:
    - name: http
      port: 81
      targetPort: 80
      protocol: TCP
    # - name: listener-2
    #   port: 443
    #   protocol: TCP
  selector:
    run: otrs-qa
