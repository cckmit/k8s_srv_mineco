apiVersion: v1
kind: ServiceAccount
metadata:
  name: payara-server
  namespace: mineco-qa
---

#  INGRESS MINECO
apiVersion: v1
kind: Service
metadata:
  name: nginx-ingress
  namespace: nginx-ingress
spec:
  type: LoadBalancer
  externalIPs:
  - 128.5.9.82
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      name: http
    - protocol: TCP
      port: 443
      targetPort: 443
      name: https
  selector:
    app: nginx-ingress


---

# VOLUME DATA
apiVersion: v1
kind: PersistentVolume
metadata:
  name: payara-deploy
  namespace: mineco-qa
  labels:
    name: payara-deploy
spec:
  storageClassName: manual
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  nfs:
    server: 128.5.8.222
    path: "/deployment/payara/diaco"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: payara-deploy
  namespace: mineco-qa
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  selector:
    matchLabels:
      name: payara-deploy

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: filesystem-diaco
  namespace: mineco-qa
  labels:
    name: filesystem-diaco
spec:
  storageClassName: manual
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  nfs:
    server: 128.5.8.222
    path: "/deployment/payara/filesystem"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: filesystem-diaco
  namespace: mineco-qa
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  selector:
    matchLabels:
      name: filesystem-diaco
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: deployment-diaco
  namespace: mineco-qa
  labels:
    name: deployment-diaco
spec:
  storageClassName: manual
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  nfs:
    server: 128.5.8.222
    path: "/deployment/payara/deployments"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: deployment-diaco
  namespace: mineco-qa
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  selector:
    matchLabels:
      name: deployment-diaco



---
# DEPLOYMENT APP
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payara-server
  namespace: mineco-qa
  labels:
    run: payara-server
spec:
  replicas: 1
  selector:
    matchLabels:
      run: payara-server
  template:
    metadata:
      labels:
        run: payara-server
    spec:
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - 128.5.8.26
        searches:
          - mineco-dev.svc.cluster.local
          - svc.cluster.local 
          - cluster.local
      containers:
      - name: payara-server
        image: jjolon/payara:v5
        ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8181
            protocol: TCP
          - containerPort: 8282
            protocol: TCP
          - containerPort: 4848
            protocol: TCP
          - containerPort: 80
            protocol: TCP
        volumeMounts:
            - mountPath: "/opt/payara/appserver/glassfish/domains/domain1"
              name: vol-payara
            - mountPath: /home/diaco/Documentos/FILESERVER
              name: vol-filesystem
            - mountPath: /opt/payara/deployments
              name: vol-deployment
      volumes:
        - name: vol-payara
          persistentVolumeClaim:
            claimName: payara-deploy
        - name: vol-filesystem
          persistentVolumeClaim:
            claimName: filesystem-diaco
        - name: vol-deployment
          persistentVolumeClaim:
            claimName: deployment-diaco


---
# SERVICE INGRESS ADMIN
apiVersion: v1
kind: Service
metadata:
  name: service-payara
  namespace: mineco-qa
  labels:
    app.kubernetes.io/name: payara-server
    app.kubernetes.io/part-of: payara-server
spec:
  # type: ClusterIP
  type: LoadBalancer
  externalIPs:
  - 128.5.9.83
  ports:
    - name: http
      port: 80
      protocol: TCP
    - name: listener-2
      port: 8282
      protocol: TCP
    - name: listener-1
      port: 8181
      protocol: TCP
    - name: asadmin
      port: 4848
      protocol: TCP
    - name: http-service
      port: 8080
      protocol: TCP
  selector:
    run: payara-server
