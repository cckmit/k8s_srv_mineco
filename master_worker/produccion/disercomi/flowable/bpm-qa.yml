apiVersion: v1
kind: ServiceAccount
metadata:
  name: bpm-qa-disercomi
  namespace: mineco-qa


# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: nginx-ingress-qa-disercomi
#   namespace: nginx-ingress
# spec:
#   type: LoadBalancer
#   externalIPs:
#     - 128.5.4.45
#   ports:
#     - protocol: TCP
#       port: 80
#       targetPort: 80
#       name: http
#     - protocol: TCP
#       port: 443
#       targetPort: 443
#       name: https
#   selector:
#     app: nginx-ingress

---

# VOLUME DATA
apiVersion: v1
kind: PersistentVolume
metadata:
  name: payara-flowable-qa
  namespace: mineco-qa
  labels:
    name: payara-flowable-qa
spec:
  storageClassName: manual
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  nfs:
    server: 128.5.8.222
    path: "/deployment/flowable/data/files"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: payara-flowable-qa
  namespace: mineco-qa
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  selector:
    matchLabels:
      name: payara-flowable-qa
---

# VOLUME DATA
apiVersion: v1
kind: PersistentVolume
metadata:
  name: payara-flowable-e-qa
  namespace: mineco-qa
  labels:
    name: payara-flowable-e-qa
spec:
  storageClassName: manual
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  nfs:
    server: 128.5.8.222
    path: "/deployment/flowable/data/esquema"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: payara-flowable-e-qa
  namespace: mineco-qa
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  selector:
    matchLabels:
      name: payara-flowable-e-qa

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bpm-disercomi-qa
  namespace: mineco-qa
  labels:
    run: bpm-disercomi-qa
spec:
  replicas: 1
  selector:
    matchLabels:
      run: bpm-disercomi-qa
  template:
    metadata:
      labels:
        run: bpm-disercomi-qa
    spec:
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - 128.5.8.26
        searches:
          - mineco-dev.svc.cluster.local
          - svc.cluster.local
          - cluster.local
      containers:
        - name: bpm-disercomi-qa
          image: jjolon/flowable_ssl
          # image: jjolon/payara-qa:v2
#          image: payara/server-full:latest
          resources:
            requests:
              memory: "Gi"
              cpu: "200m"
            limits:
              memory: "3Gi"
              cpu: "700m"
          ports:
            - containerPort: 8181
              protocol: TCP
            - containerPort: 8282
              protocol: TCP
            - containerPort: 8080
              protocol: TCP
            - containerPort: 80
              protocol: TCP
            - containerPort: 4848
              protocol: TCP
          volumeMounts:
            - mountPath: "/opt/flowable/data"
              name: vol-flowable
#            - mountPath: "/opt/payara/appserver/glassfish/domains/domain1"
#              name: vol-flowable-e
      volumes:
        - name: vol-flowable
          persistentVolumeClaim:
            claimName: payara-flowable-qa
#        - name: vol-flowable-e
#          persistentVolumeClaim:
#            claimName: payara-flowable-e-qa

---
apiVersion: v1
kind: Service
metadata:
  name: bpm-disercomi-qa
  namespace: mineco-qa
  labels:
    app.kubernetes.io/name: bpm-disercomi-qa
    app.kubernetes.io/part-of: bpm-disercomi-qa
spec:
  type: LoadBalancer
  externalIPs:
    - 128.5.4.45
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP
    - name: listener-2
      port: 443
      targetPort: 8282
      protocol: TCP
    - name: listener-1
      port: 8181
      protocol: TCP
    - name: asadmin
      port: 4848
      protocol: TCP
  selector:
    run: bpm-disercomi-qa

