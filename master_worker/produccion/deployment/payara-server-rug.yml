apiVersion: v1
kind: ServiceAccount
metadata:
  name: payara-rgm
  namespace: rgm
---
##  INGRESS MINECO
#apiVersion: v1
#kind: Service
#metadata:
#  name: nginx-ingress
#  namespace: nginx-ingress
#spec:
#  type: LoadBalancer
#  externalIPs:
#  - 128.5.9.82
#  ports:
#    - protocol: TCP
#      port: 80
#      targetPort: 80
#      name: http
#    - protocol: TCP
#      port: 443
#      targetPort: 443
#      name: https
#  selector:
#    app: nginx-ingress

---
# VOLUME DATA domains 1
apiVersion: v1
kind: PersistentVolume
metadata:
  name: payara-rgm
  namespace: rgm
  labels:
    name: payara-rgm
spec:
  storageClassName: manual
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  nfs:
    server: 128.5.8.222
    path: "/deployment/payara/ws_rug/ws"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: payara-rgm
  namespace: rgm
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  selector:
    matchLabels:
      name: payara-rgm
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: deployment-rgm
  namespace: rgm
  labels:
    name: deployment-rgm
spec:
  storageClassName: manual
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  nfs:
    server: 128.5.8.222
    path: "/deployment/payara/ws_deployment"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: deployment-rgm
  namespace: rgm
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  selector:
    matchLabels:
      name: deployment-rgm

---
# DEPLOYMENT APP
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payara-rgm
  namespace: rgm
  labels:
    run: payara-rgm
spec:
  replicas: 1
  selector:
    matchLabels:
      run: payara-rgm
  template:
    metadata:
      labels:
        run: payara-rgm
    spec:
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - 128.5.8.26
        searches:
          - mineco-dev.svc.cluster.local
          - svc.cluster.local
          - cluster.local
      containers:
        - name: payara-rgm
          image: jjolon/payara:v5
          ports:
          # image: payara/server-full
            # - containerPort: 8080
            #   protocol: TCP
            - containerPort: 8181
              protocol: TCP
            # - containerPort: 8282
            #   protocol: TCP
            - containerPort: 4848
              protocol: TCP
            - containerPort: 80
              protocol: TCP
          volumeMounts:
            - mountPath: "/opt/payara/appserver/glassfish/domains/domain1"
              name: vol-payara
            - mountPath: "/opt/payara/deployments"
              name: vol-deployment
      volumes:
        - name: vol-payara
          persistentVolumeClaim:
            claimName: payara-rgm
        - name: vol-deployment
          persistentVolumeClaim:
            claimName: deployment-rgm

---
# SERVICE INGRESS ADMIN
apiVersion: v1
kind: Service
metadata:
  name: service-rgm-payara
  namespace: rgm
  labels:
    app.kubernetes.io/name: payara-rgm
    app.kubernetes.io/part-of: payara-rgm
spec:
  # type: ClusterIP
  type: LoadBalancer
  externalIPs:
    - 128.5.4.38
  ports:
    # - name: http
    #   port: 80
    #   targetPort: 8181
    #   protocol: TCP
    - name: listener-2
      port: 8282
      targetPort: 8181
      protocol: TCP
    # - name: listener-1
    #   port: 8282
    #   targetPort: 8181
    #   protocol: TCP
    - name: asadmin
      port: 4848
      protocol: TCP
    # - name: http-service
    #   port: 8080
    #   protocol: TCP
  selector:
    run: payara-rgm
